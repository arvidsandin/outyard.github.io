{"version":3,"sources":["webpack:///./src/components/hackathon.js","webpack:///./src/components/project.js","webpack:///./src/pages/index.js"],"names":["Hackathon","id","date","title","start","end","total","location","locationUrl","isTeaser","children","className","href","target","Project","author","image","video","site","github","files","src","alt","autoPlay","loop","muted","type","IndexPage"],"mappings":"uIAyBeA,G,UAnBG,SAAC,GAAD,EAAEC,GAAF,IAAMC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,IAAKC,EAA/B,EAA+BA,MAAOC,EAAtC,EAAsCA,SAAUC,EAAhD,EAAgDA,YAAaC,EAA7D,EAA6DA,SAAUC,EAAvE,EAAuEA,SAAvE,OAChB,yBAAKC,UAAW,cAAgBF,EAAW,mBAAqB,KAC9D,kBAAC,IAAD,KACE,yBAAKE,UAAU,kBACb,0BAAMA,UAAU,gBAAgBT,EAAhC,IAAsC,0BAAMS,UAAU,UAAUP,EAA1B,IAAwCC,EAAxC,KAA+CC,EAA/C,QAAuEC,GAAY,yCACrH,0BAAMI,UAAU,sBAAqB,uBAAGC,KAAMJ,EAAaK,OAAO,UAAUN,MAGlF,wBAAII,UAAU,mBAAmBR,GAEhCO,GACC,yBAAKC,UAAU,sBACZD,O,YCiBII,G,UA/BC,SAAC,GAAkE,IAAjEX,EAAgE,EAAhEA,MAAOY,EAAyD,EAAzDA,OAAQC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,MAAOV,EAAc,EAAdA,SAElE,OACE,yBAAKC,UAAU,WACb,wBAAIA,UAAU,iBAAiBR,EAA/B,OAA0CY,GACzCC,GACC,yBAAKL,UAAU,gBAAgBU,IAAKL,EAAOM,IAAI,KAEhDL,GACC,2BAAON,UAAU,gBAAgBY,UAAU,EAAMC,MAAM,EAAMC,OAAO,GAClE,4BAAQJ,IAAKJ,EAAOS,KAAK,gBAG3BN,GAASD,GAAUD,IACnB,yBAAKP,UAAU,mBACZO,GACC,uBAAGP,UAAU,wBAAwBC,KAAMM,EAAML,OAAO,UAAxD,iCAEDO,GACC,uBAAGT,UAAU,wBAAwBC,KAAMQ,EAAOP,OAAO,UAAzD,cAEDM,GACC,uBAAGR,UAAU,wBAAwBC,KAAMO,EAAQN,OAAO,UAA1D,wBAILH,K,sBCiDQiB,UAtEG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKxB,MAAM,6CAEX,kBAAC,EAAD,CACID,KAAK,MACLC,MAAM,sCACNC,MAAM,QACNC,IAAI,QACJC,MAAM,IACNC,SAAS,UACTC,YAAY,wCACZC,SAAS,SAGb,kBAAC,EAAD,CACIP,KAAK,aACLC,MAAM,uDACNC,MAAM,QACNC,IAAI,QACJC,MAAM,IACNC,SAAS,UACTC,YAAY,yCAEd,kBAAC,EAAD,CACIL,MAAM,kBACNY,OAAO,iBACPC,MAAM,GACNC,MAAM,8BACNG,MAAM,GACND,OAAO,8CACT,oSACA,2DAGF,kBAAC,EAAD,CACIhB,MAAM,UACNY,OAAO,cACPC,MAAM,sBACNE,KAAK,uCACLE,MAAM,GACND,OAAO,sCACT,sQACA,yEAGF,kBAAC,EAAD,CACIhB,MAAM,wBACNY,OAAO,eACPC,MAAM,GACNI,MAAM,GACND,OAAO,IACT,uHACA,+DAGF,kBAAC,EAAD,CACIhB,MAAM,kCACNY,OAAO,eACPC,MAAM,GACNI,MAAM,GACND,OAAO,IACT,8QACA","file":"component---src-pages-index-js-790d7f38972b10b5a440.js","sourcesContent":["import React from 'react';\n\nimport Container from './container';\n\nimport './hackathon.scss';\n\nconst Hackathon = ({id, date, title, start, end, total, location, locationUrl, isTeaser, children}) => (\n  <div className={'hackathon ' + (isTeaser ? 'hackathon-teaser' : '')}>\n    <Container>\n      <div className=\"hackathon-meta\">\n        <span className=\"hackathon-id\">{date} <span className=\"nowrap\">{start}&ndash;{end} ({total} h)</span></span>{location && <>\n          , <span className=\"hackathon-location\"><a href={locationUrl} target=\"_blank\">{location}</a></span>\n        </>}\n      </div>\n      <h1 className=\"hackathon-title\">{title}</h1>\n\n      {children && \n        <div className=\"hackathon-projects\">\n          {children}\n        </div>\n      }\n    </Container>\n  </div>\n);\n\nexport default Hackathon;\n","import React from 'react';\n\nimport './project.scss';\n\nconst Project = ({title, author, image, video, site, github, files, children}) => {\n  // TODO: Import image using GraphQL.\n  return (\n    <div className=\"project\">\n      <h1 className=\"project-title\">{title} by {author}</h1>\n      {image &&\n        <img className=\"project-image\" src={image} alt=\"\" />\n      }\n      {video &&\n        <video className=\"project-video\" autoPlay={true} loop={true} muted={true}>\n          <source src={video} type=\"video/mp4\" />\n        </video>\n      }\n      {(files || github || site) &&\n        <div className=\"project-buttons\">\n          {site &&\n            <a className=\"button project-button\" href={site} target=\"_blank\">Try the app in your browser &#x2197;</a>\n          }\n          {files &&\n            <a className=\"button project-button\" href={files} target=\"_blank\">Download &#x2193;</a>\n          }\n          {github &&\n            <a className=\"button project-button\" href={github} target=\"_blank\">GitHub repository &#x2197;</a>\n          }\n        </div>\n      }\n      {children}\n    </div>\n  );\n};\n\nexport default Project;\n","import React from 'react';\n\nimport Hackathon from '../components/hackathon';\nimport Layout from '../components/layout';\nimport Project from '../components/project';\nimport SEO from '../components/seo';\n\nimport '../styles/reset.scss';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Outyard - Hackathon @ Uppsala University\" />\n\n    <Hackathon\n        date=\"???\"\n        title=\"Code with us at the next hackathon!\"\n        start=\"17:00\"\n        end=\"00:00\"\n        total=\"7\"\n        location=\"Uthgård\"\n        locationUrl=\"https://goo.gl/maps/y5K6Nvzf9Sxu8AiFA\"\n        isTeaser=\"true\">\n    </Hackathon>\n\n    <Hackathon\n        date=\"2020-01-24\"\n        title=\"Make an online multiplayer game with mobile controls\"\n        start=\"17:00\"\n        end=\"00:00\"\n        total=\"7\"\n        location=\"Uthgård\"\n        locationUrl=\"https://goo.gl/maps/y5K6Nvzf9Sxu8AiFA\">\n\n      <Project\n          title=\"Zombie Invasion\"\n          author=\"Anton Bergåker\"\n          image=\"\"\n          video=\"/videos/Zombie_Invasion.mp4\"\n          files=\"\"\n          github=\"https://github.com/outyard/zombie-invasion\">\n        <p>A zombie shooting game where one player fights hordes of zombies strategically placed by a second player. The first player plays the game using an Xbox controller plugged into a PC, and the second player uses touch controls on a smartphone to place the zombies.</p>\n        <p>Made with GameMaker Studio.</p>\n      </Project>\n\n      <Project\n          title=\"Shooter\"\n          author=\"Carl Enlund\"\n          image=\"/images/Shooter.png\"\n          site=\"https://outyardshooter.herokuapp.com\"\n          files=\"\"\n          github=\"https://github.com/outyard/shooter\">\n        <p>A web-based first-person shooter where the players fight eachother to see who first scores 10 points. The game contains 5 unique maps which are cycled through after each win. Plays sound effects for gunshots and when a player wins.</p>\n        <p>Made with NodeJS, Socket.IO and Three.js.</p>\n      </Project>\n\n      <Project\n          title=\"Platform jumping game\"\n          author=\"Peter Öhlmér\"\n          image=\"\"\n          files=\"\"\n          github=\"\">\n        <p>In this game you jump on platforms falling down from the sky, trying not to get crushed.</p>\n        <p>Made with NodeJS and Socket.IO.</p>\n      </Project>\n\n      <Project\n          title=\"Sidescroller with delayed input\"\n          author=\"Arvid Sandin\"\n          image=\"\"\n          files=\"\"\n          github=\"\">\n        <p>This is the most frustrating game you will ever play. Every move you make is delayed by half a second, while you stressfully try to navigate through an otherwise simple map. The game is played on desktop using a smartphone as a controller.</p>\n        <p>Made with NodeJS and Socket.IO.</p>\n      </Project>\n\n    </Hackathon>\n  </Layout>\n);\n\nexport default IndexPage;\n"],"sourceRoot":""}